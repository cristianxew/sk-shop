$nameSpace: "hvr" !default;
$webkit: true !default;
$moz: false !default;
$ms: false !default;
$o: false !default;
// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

// prefix keyframes
@mixin keyframes($name) {
  @if $webkit == true {
    @-webkit-keyframes #{$name} {
      @content;
    }
  }

  @if $moz == true {
    @-moz-keyframes #{$name} {
      @content;
    }
  }

  @if $ms == true {
    @-ms-keyframes #{$name} {
      @content;
    }
  }

  @if $o == true {
    @-o-keyframes #{$name} {
      @content;
    }
  }

  @keyframes #{$name} {
    @content;
  }
}

@mixin hardwareAccel() {
  // Improve performance on mobile/tablet devices
  // Perspective reduces blurryness of text in Chrome
  @include prefixed(transform, perspective(1px) translateZ(0));
}

@mixin improveAntiAlias() {
  // Improve aliasing on mobile/tablet devices
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin forceBlockLevel() {
  // Transforms need to be block-level to work
  display: inline-block;
  vertical-align: middle;
}

@mixin hacks() {
  @include forceBlockLevel();
  @include hardwareAccel();
  @include improveAntiAlias();
}

@include keyframes(#{$nameSpace}-hang) {
  0% {
    @include prefixed(transform, translateY(6px));
  }
  50% {
    @include prefixed(transform, translateY(0px));
  }
  100% {
    @include prefixed(transform, translateY(6px));
  }
}

@include keyframes(#{$nameSpace}-hang-sink) {
  100% {
    @include prefixed(transform, translateY(5px));
  }
}

@mixin hang {
  @include hacks();

  &:hover,
  &:focus,
  &:active {
    @include prefixed(
      animation-name,
      "#{$nameSpace}-hang-sink, #{$nameSpace}-hang"
    );
    @include prefixed(animation-duration, ".3s, 1.5s");
    @include prefixed(animation-delay, "0s, .3s");
    @include prefixed(animation-timing-function, "ease-out, ease-in-out");
    @include prefixed(animation-iteration-count, "1, infinite");
    @include prefixed(animation-fill-mode, "forwards");
    @include prefixed(animation-direction, "normal, alternate");
  }
}

.footer {
  background: #10375c;
  width: 100%;
  height: 92px;
  &__icons {
    width: 50%;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    .icon {
      display: inline-block;
      vertical-align: middle;
      -webkit-transform: perspective(1px) translateZ(0);
      transform: perspective(1px) translateZ(0);
      transform: translateY(-2px);
      box-shadow: 0 0 1px rgba(0, 0, 0, 0);
      -webkit-animation-name: hvr-hang-sink, hvr-hang;
      animation-name: hvr-hang-sink, hvr-hang;
      -webkit-animation-duration: 0.3s, 1.5s;
      animation-duration: 0.3s, 1.5s;
      -webkit-animation-delay: 0s, 0.3s;
      animation-delay: 0s, 0.3s;
      -webkit-animation-timing-function: ease-out, ease-in-out;
      animation-timing-function: ease-out, ease-in-out;
      -webkit-animation-iteration-count: 1, infinite;
      animation-iteration-count: 1, infinite;
      -webkit-animation-fill-mode: forwards;
      animation-fill-mode: forwards;
      -webkit-animation-direction: normal, alternate;
      animation-direction: normal, alternate;
      .fab {
        font-size: 1.5rem;
        color: #f3c623;
        cursor: pointer;
      }
    }
  }
  &__copy {
    text-align: center;
    font-family: "Lobster Two", cursive;
    font-style: italic;
    padding: 0.5rem;
    background: rgba(0, 0, 0, 0.2);
    color: #f4f6ff;
  }
}
